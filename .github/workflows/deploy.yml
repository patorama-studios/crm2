name: Deploy Patorama CRM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install backend dependencies
      run: npm ci
      
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Run backend tests (if available)
      run: npm test --if-present
      
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        
    - name: Build production bundle
      run: |
        cd frontend
        npm run build
        cd ..
        cp -r frontend/build ./public
        
    - name: Create deployment package
      run: |
        mkdir -p deploy
        rsync -av --exclude='node_modules' \
                  --exclude='.git' \
                  --exclude='frontend' \
                  --exclude='*.log' \
                  --exclude='.env' \
                  --exclude='uploads' \
                  . deploy/
        cp .env.production deploy/.env
        
    - name: Archive deployment package
      uses: actions/upload-artifact@v3
      with:
        name: patorama-crm-production
        path: deploy/
        retention-days: 30
        
    # Optional: Deploy to server via SSH/FTP
    # - name: Deploy to production server
    #   uses: appleboy/ssh-action@v0.1.5
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     password: ${{ secrets.PASSWORD }}
    #     script: |
    #       cd /path/to/your/app
    #       git pull origin main
    #       npm install --production
    #       pm2 restart patorama-crm